//
//  BookDetailsPresenter.swift
//  BookPlace
//
//  Created by Artem Lyksa on 3/9/17.
//  Copyright (c) 2017 Artem Lyksa. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol BookDetailsPresenterInput
{
    func presentRightBarButton(request:BookDetails.CreateRightBarButton.Request)
    func addBookToBasket(request:BookDetails.AddBookToBasket.Response)
    func removeBookFormBasket(request:BookDetails.RemoveBookFromBasket.Response)
}

protocol BookDetailsPresenterOutput: class
{
    func displayRightBarButton(viewModel:BookDetails.CreateRightBarButton.ViewModel)
    func addBookToBasket(request:BookDetails.AddBookToBasket.ViewModel)
    func removeBookFormBasket(request:BookDetails.RemoveBookFromBasket.ViewModel)
}

class BookDetailsPresenter: BookDetailsPresenterInput
{
  weak var output: BookDetailsPresenterOutput!
  
    func presentRightBarButton(request: BookDetails.CreateRightBarButton.Request) {
        let barButtonItem = UIBarButtonItem()
        barButtonItem.title = request.title
        output.displayRightBarButton(viewModel: BookDetails.CreateRightBarButton.ViewModel(rightBarButtonItem: barButtonItem))
    }
    
    func addBookToBasket(request: BookDetails.AddBookToBasket.Response) {
        output.addBookToBasket(request: BookDetails.AddBookToBasket.ViewModel())
    }
    
    func removeBookFormBasket(request: BookDetails.RemoveBookFromBasket.Response) {
        output.removeBookFormBasket(request: BookDetails.RemoveBookFromBasket.ViewModel())
    }
}
