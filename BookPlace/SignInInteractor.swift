//
//  SignInInteractor.swift
//  BookPlace
//
//  Created by Artem Lyksa on 3/8/17.
//  Copyright (c) 2017 Artem Lyksa. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import GoogleSignIn

protocol SignInInteractorInput
{
    func signInWithFacebook(request: SignIn.Authenticate.Request)
    func signInWithGoogle(request: SignIn.Authenticate.Request)
}

protocol SignInInteractorOutput
{
    func presentUserInfo(response: SignIn.Authenticate.Response)
}

class SignInInteractor: NSObject, SignInInteractorInput
{
    var output: SignInInteractorOutput!
    var worker: SignInWorker!
    
    // MARK: - Business logic
    func signInWithFacebook(request: SignIn.Authenticate.Request) {
        worker = SignInWorker()
        worker.signInWithFacebook { (name, email) in
            let response = SignIn.Authenticate.Response(email: name, name: email)
            self.output.presentUserInfo(response: response)
        }
    }
    
    func signInWithGoogle(request: SignIn.Authenticate.Request) {
        GIDSignIn.sharedInstance().delegate = self
        worker = SignInWorker()
        worker.signInWithGoogle()
    }
}

extension SignInInteractor: GIDSignInDelegate {
    
    func sign(_ signIn: GIDSignIn!, didSignInFor user: GIDGoogleUser!, withError error: Error!) {
        if error == nil {
            let response = SignIn.Authenticate.Response(email: signIn.currentUser.profile.name, name: signIn.currentUser.profile.email)
            self.output.presentUserInfo(response: response)
        } else {
         print(error)
        }

    }
    
    func sign(_ signIn: GIDSignIn!, didDisconnectWith user: GIDGoogleUser!, withError error: Error!) {
        print(error)
    }
}

