//
//  BookListPresenter.swift
//  BookPlace
//
//  Created by Artem Lyksa on 3/8/17.
//  Copyright (c) 2017 Artem Lyksa. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol BookListPresenterInput
{
    func presentBookList(response: [BookList.GetBookList.Response])
    func presentBookImage(response:BookList.GetBookImage.Response)
}

protocol BookListPresenterOutput: class
{
    func displayBookList(viewModel: BookList.GetBookList.ViewModel)
    func displayBookImage(viewModel: BookList.GetBookImage.ViewModel)
}

class BookListPresenter: BookListPresenterInput
{
    weak var output: BookListPresenterOutput!
    
    // MARK: - Presentation logic
    func presentBookList(response: [BookList.GetBookList.Response]) {
        var books: [Book] = []
        for respStruct in response {
            var authorString = String()
            for author in respStruct.authors {
                authorString = authorString.appendingFormat("%@\n", author)
            }
            let book = Book(name: respStruct.bookName, authors: authorString, bookDescription: respStruct.description)
            books.append(book)
            guard let imageURL = respStruct.imageURL else { continue }
            book.imageURL = imageURL
        }
        output.displayBookList(viewModel: BookList.GetBookList.ViewModel(bookList: books))
    }
    
    func presentBookImage(response:BookList.GetBookImage.Response) {
        output.displayBookImage(viewModel: BookList.GetBookImage.ViewModel(book: response.book))
    }
}
