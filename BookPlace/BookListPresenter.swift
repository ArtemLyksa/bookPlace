//
//  BookListPresenter.swift
//  BookPlace
//
//  Created by Artem Lyksa on 3/8/17.
//  Copyright (c) 2017 Artem Lyksa. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol BookListPresenterInput
{
    func presentBookLits(response: BookList.GetBookList.Response)
    func presentBookImage(response:BookList.GetBookImage.Response)

}

protocol BookListPresenterOutput: class
{
    func displayBookList(viewModel: [BookList.GetBookList.ViewModel])
    func displayBookImage(viewModel: BookList.GetBookImage.ViewModel)
}

class BookListPresenter: BookListPresenterInput
{
    weak var output: BookListPresenterOutput!
    
    // MARK: - Presentation logic
    func presentBookLits(response: BookList.GetBookList.Response) {
        guard let books = response.bookList else { return }
        var viewModels = [BookList.GetBookList.ViewModel()]
        for book in books {
            var authorString = String()
            
            for author in book.authors {
                authorString = authorString.appendingFormat("%@\n", author)
            }
            viewModels.append(BookList.GetBookList.ViewModel(bookName: book.name, authors: authorString, image: nil, imageURL: book.imageURL))
//            viewModels.append(BookList.GetBookList.ViewModel(bookName: book.name, authors: authorString, image: book.image))
        }
        output.displayBookList(viewModel: viewModels)
    }
    
    func presentBookImage(response:BookList.GetBookImage.Response) {
        guard let image = UIImage.init(data: response.imageData) else {
            output.displayBookImage(viewModel: BookList.GetBookImage.ViewModel(image: UIImage.init(), indexPath: response.indexPath))
            return
        }
        output.displayBookImage(viewModel: BookList.GetBookImage.ViewModel(image: image, indexPath: response.indexPath))
    }
}
